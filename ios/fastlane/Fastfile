# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  def root_path
    Dir.pwd.sub(/.*\Kfastlane/, '').sub(/.*\Kandroid/, '').sub(/.*\Kios/, '').sub(/.*\K\/\//, '')
  end

  # Have an easy way to run flutter tasks on the root of the project
  lane :sh_on_root do |options|
    command = options[:command]
    sh("cd #{root_path} && #{command}")
  end

  # Tasks to be reused on each platform flow
  desc "Fetch and install dependencies"
  lane :fetch_dependencies do
    sh_on_root(command: "flutter pub get && flutter pub run build_runner build --delete-conflicting-outputs")
    sh_on_root(command: "cd ios && pod install --repo-update")
  end

  desc "Push a new build"
  lane :build do
    sh_on_root(command: "flutter build ios --flavor #{ENV['SCHEME']} --dart-define-from-file=.env/#{ENV['SCHEME']}.json")
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    app_store_connect_api_key(
      key_id: ENV['KEY_ID'],
      issuer_id: ENV['ISSUER_ID'],
      key_filepath: "./fastlane/#{ENV['AUTH_KEY']}",
      duration: 1200, # optional (maximum 1200)
      in_house: false # optional but may be required if using match/sigh
    )
    fetch_dependencies
    build
    build_app(workspace: "Runner.xcworkspace", scheme: ENV['SCHEME'])
    upload_to_testflight
  end
end